[{"/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/index.js":"1","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/App.js":"2","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/utils/StateProvider.js":"3","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/utils/reducer.js":"4","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/left/Sidebar.js":"5","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/middle/Main.js":"6","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/user/Login.js":"7","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/middle/Notifications.js":"8","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/user/Admin.js":"9","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/middle/Search.js":"10","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/middle/Profile.js":"11","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/right/Embed.js":"12","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/middle/Bookmark.js":"13","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/left/SidebarOption.js":"14","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/middle/CommentDialog.js":"15","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/user/userCard.js":"16","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/middle/ProfileTabs.js":"17","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/middle/EditProfileDialog.js":"18","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/middle/Post.js":"19","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/user/SignupDialog.js":"20","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/middle/Tweet.js":"21","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/middle/InputWithCounter.js":"22","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/admin/ReportDialog.js":"23"},{"size":710,"mtime":1604643300000,"results":"24","hashOfConfig":"25"},{"size":3042,"mtime":1606705672000,"results":"26","hashOfConfig":"25"},{"size":373,"mtime":1604643300000,"results":"27","hashOfConfig":"25"},{"size":450,"mtime":1604643300000,"results":"28","hashOfConfig":"25"},{"size":1894,"mtime":1606705672000,"results":"29","hashOfConfig":"25"},{"size":3734,"mtime":1606720604000,"results":"30","hashOfConfig":"25"},{"size":2783,"mtime":1606705672000,"results":"31","hashOfConfig":"25"},{"size":1165,"mtime":1605670346000,"results":"32","hashOfConfig":"25"},{"size":4604,"mtime":1606705672000,"results":"33","hashOfConfig":"25"},{"size":4499,"mtime":1606722028000,"results":"34","hashOfConfig":"25"},{"size":7276,"mtime":1606705672000,"results":"35","hashOfConfig":"25"},{"size":1060,"mtime":1606705672000,"results":"36","hashOfConfig":"25"},{"size":1402,"mtime":1605670346000,"results":"37","hashOfConfig":"25"},{"size":361,"mtime":1604643300000,"results":"38","hashOfConfig":"25"},{"size":1711,"mtime":1606720604000,"results":"39","hashOfConfig":"25"},{"size":1243,"mtime":1606722202000,"results":"40","hashOfConfig":"25"},{"size":3517,"mtime":1605670346000,"results":"41","hashOfConfig":"25"},{"size":8475,"mtime":1605670346000,"results":"42","hashOfConfig":"25"},{"size":7543,"mtime":1606784478945,"results":"43","hashOfConfig":"25"},{"size":4425,"mtime":1605120210000,"results":"44","hashOfConfig":"25"},{"size":2837,"mtime":1606720604000,"results":"45","hashOfConfig":"25"},{"size":927,"mtime":1604643300000,"results":"46","hashOfConfig":"25"},{"size":3539,"mtime":1606705672000,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"rkwath",{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"50"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},"/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/index.js",[],["110","111"],"/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/App.js",["112","113"],"import React, {useEffect} from 'react';\r\nimport Login from './components/user/Login'\r\nimport Admin from './components/user/Admin';\r\nimport Sidebar from './components/left/Sidebar'\r\nimport Main from './components/middle/Main'\r\nimport Profile from './components/middle/Profile'\r\nimport Embed from './components/right/Embed'\r\nimport Bookmark from './components/middle/Bookmark'\r\nimport Search from './components/middle/Search'\r\nimport Notifications from './components/middle/Notifications'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport './App.css';\r\nimport { useStateValue } from \"./utils/StateProvider\";\r\n\r\n\r\nfunction App() {\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        // check if session exist\r\n        // const session = localStorage.getItem('myData');\r\n        // or create login service in sercive.js\r\n        const auth = {};\r\n        if (auth) {\r\n            // the user just logged in / the user was logged in\r\n            dispatch({\r\n                type: \"SET_USER\",\r\n                user: auth,\r\n            });\r\n        } else {\r\n            // the user is logged out\r\n            dispatch({\r\n                type: \"SET_USER\",\r\n                user: null,\r\n            });\r\n        }\r\n    },[]);\r\n\r\n    return (\r\n        //   <div className=\"app\">\r\n        //   {!token && <Login />}\r\n        //   {token &&\r\n        //   <>\r\n        //   <Sidebar/>\r\n        //   <Main/>\r\n        //   <Embed/>\r\n        //   </>\r\n        //   }\r\n        // </div>\r\n        <Router>\r\n            <div className=\"app\">\r\n                <Switch>\r\n                    <Route path=\"/home\">\r\n                        <Sidebar ativeOne=\"Home\"/>\r\n                        <Main/>\r\n                        <Embed/>\r\n                    </Route>\r\n                    <Route path=\"/admin\">\r\n                        <Admin/>\r\n                    </Route>\r\n                    <Route path=\"/login\">\r\n                        <Login />\r\n                    </Route>\r\n                    <Route path=\"/profile\">\r\n                        <Sidebar ativeOne=\"Profile\"/>\r\n                        <Profile/>\r\n                        <Embed/>\r\n                    </Route>\r\n                    <Route path=\"/notifications\">\r\n                        <Sidebar activeOne=\"Notifications\"/>\r\n                        <Notifications/>\r\n                        <Embed/>\r\n                    </Route>\r\n                    <Route path=\"/bookmarks\">\r\n                        <Sidebar activeOne=\"Bookmark\"/>\r\n                        <Bookmark/>\r\n                        <Embed/>\r\n                    </Route>\r\n                    <Route path=\"/search\">\r\n                        <Sidebar activeOne=\"Search\"/>\r\n                        <Search/>\r\n                        <Embed/>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Login />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/utils/StateProvider.js",[],"/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/utils/reducer.js",[],"/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/left/Sidebar.js",["114","115"],"import React from 'react';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport SidebarOption from \"../left/SidebarOption\"\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nfunction Sidebar({activeOne}) {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <TwitterIcon className=\"logo\"/>\r\n            <SidebarOption active ={activeOne===\"Home\"} text=\"Home\" Icon={HomeIcon} href=\"/home\"/>\r\n            {/* <SidebarOption active ={activeOne===\"Explore\"} text=\"Explore\" Icon={SearchIcon}/> */}\r\n            <SidebarOption active ={activeOne===\"Search\"} text=\"Search\" Icon={SearchIcon} href=\"/search\"/>\r\n            <SidebarOption active ={activeOne===\"Notifications\"} text=\"Notifications\" Icon={NotificationsIcon} href=\"/notifications\"/>\r\n            {/*<SidebarOption active ={activeOne===\"Messages\"} text=\"Messages\" Icon={MailOutlineIcon}/>*/}\r\n            <SidebarOption active ={activeOne===\"Bookmarks\"} text=\"Bookmarks\" Icon={BookmarkIcon} href=\"/bookmarks\"/>\r\n            {/*<SidebarOption active ={activeOne===\"Lists\"} text=\"Lists\" Icon={ListAltIcon}/>*/}\r\n            <SidebarOption active ={activeOne===\"Profile\"} text=\"Profile\" Icon={PermIdentityIcon} href=\"/profile\"/>\r\n            <SidebarOption active ={activeOne===\"More\"} text=\"More\" Icon={MoreHorizIcon}/>\r\n            <Button variant=\"outlined\" className=\"tweet_btn\" fullWidth>Tweet</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/middle/Main.js",["116","117","118"],"import React,{ useEffect,useState } from 'react'\r\nimport Tweet from '../middle/Tweet';\r\nimport Post from '../middle/Post';\r\nimport axios from 'axios';\r\nimport CommentDialog from './CommentDialog';\r\n//import { useStateValue } from \"../../utils/StateProvider\";\r\nfunction Main() {\r\n    const [tweets, setTweets] = useState([]);\r\n    const [user, setUser] = useState();\r\n    const [viewComments, setViewComments] = useState(false);\r\n    const [leaveComment, setLeaveComment] = useState(false);\r\n    const [postData, setPostData] = useState({tweet_data:{id:0},comment:[],main_post_user:{id:0,avatar:\"\"}});\r\n    //const [{user}] = useStateValue();\r\n    const tweetOnChange =(func) =>{\r\n        if (func == \"tweet\"){\r\n            getTweets();\r\n        }\r\n    }\r\n\r\n    const postOnClick =(data, main_post_user) =>{\r\n        let viewPost={tweet_data: data, main_post_user:main_post_user,comment:[]}\r\n        setPostData(viewPost)\r\n        getComment(viewPost)\r\n        setLeaveComment(!leaveComment)\r\n    }\r\n\r\n    const handleClose=()=>{\r\n        setLeaveComment(!leaveComment)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTweets();\r\n    },[postData]);\r\n\r\n    const getTweets = () =>{\r\n        let bearer = 'Bearer ' + JSON.parse(JSON.stringify(localStorage.getItem('jwt')));\r\n        axios({\r\n            method: 'post',\r\n            url: '/api/auth/userInfo',\r\n            headers: {\r\n              Authorization: bearer\r\n            }\r\n          }).then(resp => {\r\n            setUser(resp.data)\r\n            console.log(\"MAIN JS USER: \", user);\r\n\r\n            axios.get(`/api/auth/posts/${resp.data.id}`,{\r\n                headers: {\r\n                    Authorization: bearer\r\n                }\r\n            }).then((res)=>{\r\n                    setTweets(res.data)\r\n                }).catch(r=>{\r\n                    console.log(r);\r\n                    alert(r);\r\n                });\r\n          }).catch(r => {\r\n            console.log(r)\r\n            alert(JSON.stringify(r.response.data));\r\n          });  \r\n    }\r\n\r\n    const getComment = (viewPost) =>{\r\n         axios.get(`/api/auth/comments/${viewPost.tweet_data.id}`, {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${localStorage.getItem(\"jwt\")}`},\r\n        }).then((res)=>{\r\n            viewPost.comment=res.data\r\n            setPostData(viewPost)\r\n        }).catch(r=>{\r\n            console.log(r);\r\n            alert(r);\r\n        });\r\n    }\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"main_header\">\r\n            <h1>Home </h1>\r\n            </div>\r\n            <div className={!viewComments?\"show\":\"hidden\"}>\r\n                <Tweet user={user} tweetOnChange={tweetOnChange} reply={null}/>\r\n            </div>\r\n            <div >\r\n            {tweets.map((tweet,index)=>{\r\n                   return <Post key={index} tweet_data={tweet.post} user={tweet.user} postOnClick={postOnClick} viewOnly={false} currUser={user}/>\r\n                })}\r\n            </div>\r\n            \r\n            {/* <div className={viewComments? \"show\":\"hidden\"}> \r\n                <Post tweet_data={postData.tweet_data} user={postData.main_post_user} postOnClick={postOnClick} viewOnly={false}/>\r\n                {postData.comment.map((c,index)=>{\r\n                    return <Post key={index} tweet_data={c.post} user={c.user} postOnClick={postOnClick}/>\r\n                 })\r\n                }\r\n            </div> */}\r\n\r\n            <CommentDialog \r\n            open={leaveComment} \r\n            main_post={postData.tweet_data} \r\n            main_post_user={postData.main_post_user} \r\n            comment_user={user} \r\n            comments={postData.comment}\r\n            onClose={handleClose} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/user/Login.js",["119","120"],"\r\nimport React, { useState } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { Button } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SignupDialog from \"../user/SignupDialog\";\r\n//import { useStateValue } from \"../../utils/StateProvider\";\r\nimport axios from 'axios';\r\nfunction Login() {\r\n\r\n  const history = useHistory();\r\n  const [user, setUser] = useState({\r\n    account: null,\r\n    password: null\r\n  });\r\n  const forgetPwd = () => {\r\n    history.push(\"/forgetPwd\");\r\n  }\r\n  const [signDialog, setSignDialog] = useState(false);\r\n  const Login = () => {\r\n    axios.post('/api/auth/sign-in', {\r\n      email: user.account,\r\n      password: user.password\r\n    }).then((resp) => {\r\n      console.log(resp.data);\r\n      localStorage.setItem('jwt', resp.data);\r\n      if (user.account === 'admin@gmail.com') {\r\n        history.push(\"/admin\")\r\n      } else {\r\n        //userlogin(resp.data)\r\n        history.push(\"/home\")\r\n      }\r\n      //todo go to home page\r\n    }).catch(r => {\r\n      console.log(r)\r\n      if (r.response && r.response.status == 403) {\r\n        alert(\"This user was disabled\")\r\n      } else {\r\n        console.log(r);\r\n        alert(\"Bad credentials\");\r\n      }\r\n    });\r\n  }\r\n  const handleClose = () => {\r\n    console.log(signDialog)\r\n    setSignDialog(!signDialog)\r\n  }\r\n  /*\r\n  const [{}, dispatch] = useStateValue();\r\n  const userlogin = (user) => {\r\n        //Add item to basket...\r\n        console.log(user)\r\n        dispatch({\r\n            type: \"USER_LOGIN\",\r\n            user: {\r\n                user_id:user.id,\r\n                avater:user.avater,\r\n                name:user.name\r\n            }\r\n        })\r\n    };\r\n    */\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"paper\">\r\n        <Paper elevation={3} className=\"login_ad\">\r\n          <div className=\"login_sign\">\r\n            <h1>Join Twitter today</h1>\r\n            <div className=\"login_input\">\r\n              <input placeholder=\"Phone, Account, or Email\" type=\"text\" onChange={e => setUser({\r\n                ...user,\r\n                account: e.target.value\r\n              }\r\n              )} />\r\n              <input placeholder=\"password\" type=\"password\" onChange={e => setUser({\r\n                ...user,\r\n                password: e.target.value\r\n              }\r\n              )} />\r\n              <Button className=\"tweet_btn\" onClick={Login}>Log in</Button>\r\n              <Button className=\"tweet_btn\" onClick={handleClose}>Sign up</Button>\r\n              <Button color=\"primary\" onClick={forgetPwd}>Forget Password</Button>\r\n            </div>\r\n          </div>\r\n        </Paper>\r\n      </div>\r\n      <SignupDialog open={signDialog} onClose={handleClose} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/middle/Notifications.js",["121","122","123"],"import React,{ useEffect,useState } from 'react'\r\nimport Post from '../middle/Post'\r\nimport axios from 'axios';\r\n\r\nfunction Main() {\r\n    const [notifications, setNotifications] = useState([]);\r\n    useEffect(() => {\r\n        let bearer = 'Bearer ' + JSON.parse(JSON.stringify(localStorage.getItem('jwt')));\r\n        axios({\r\n            method: 'get',\r\n            url: '/api/notifications',\r\n            headers: {\r\n              Authorization: bearer\r\n            }\r\n          }).then(resp => {\r\n            setNotifications(resp.data)\r\n          }).catch(r => {\r\n          console.log(r)\r\n          });  \r\n      },[]);\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"main_header\"> \r\n            <h1>Notifications</h1>\r\n            </div>\r\n            <div>\r\n                {notifications.map((notification,_)=>{\r\n                   return <div className=\"post\">\r\n\t\t\t\t\t\tUser &#160;<a href=\"\">@{notification.username} </a> \r\n\t\t\t\t\t\t&#160;liked your Tweet&#160;\r\n\t\t\t\t\t\t<a href=\"\"> {notification.tweet} </a>\r\n\t\t\t\t\t\t\t\t<hr/>\r\n\t\t\t\t   </div>\r\n                })}\r\n     \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/user/Admin.js",[],"/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/middle/Search.js",["124","125","126"],"import React, {useEffect, useState} from 'react'\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { Tab, Tabs} from \"@material-ui/core\";\r\nimport Post from '../middle/Post'\r\nimport axios from 'axios';\r\nimport Card from '../user/userCard';\r\n\r\n\r\nfunction Search(props) {\r\n\r\n    const [searchWord, setSearchWord] =useState(\"\");\r\n    const [value, setValue] = React.useState(0);\r\n    const [user, setUsers] =useState([]);\r\n    const [tweets, setTweets] =useState([]);\r\n    const [tagResult, setTagResult] =useState([]);\r\n    const handleSearchInputChanges = (e) => {\r\n        setSearchWord(e.target.value);\r\n    }\r\n\r\n    const search_tweet =() =>{\r\n        console.log(\"enter search tweet\");\r\n        let bearer = 'Bearer ' + JSON.parse(JSON.stringify(localStorage.getItem('jwt')));\r\n        axios.get(`/api/auth/tweet-search/${searchWord}`, {\r\n            headers: {\r\n                Authorization: bearer\r\n            }\r\n        }).then((res)=>{\r\n            setTweets(res.data)\r\n        }).catch(r=>{\r\n            console.log(r);\r\n            alert(r);\r\n        });\r\n    }\r\n\r\n    const search =() =>{\r\n        let bearer = 'Bearer ' + JSON.parse(JSON.stringify(localStorage.getItem('jwt')));\r\n        axios.get(`/api/auth/search/${searchWord}`, {\r\n            headers: {\r\n                Authorization: bearer\r\n            }\r\n        }).then((res)=>{\r\n            console.log(\"SET user\",res.data);\r\n          setUsers(res.data);\r\n        }).catch(r=>{\r\n            console.log(r);\r\n            alert(r);\r\n        });\r\n    }\r\n\r\n    const searchTag =async() =>{\r\n        let bearer = 'Bearer ' + JSON.parse(JSON.stringify(localStorage.getItem('jwt')));\r\n        await axios.get(`/api/auth/searchTag/${searchWord}`, {\r\n            headers: {\r\n                Authorization: bearer\r\n            }\r\n        }).then((res)=>{\r\n            setTagResult(res.data);\r\n        }).catch(r=>{\r\n            console.log(r);\r\n            alert(r);\r\n        });\r\n    }\r\n\r\n    const handleChange = (event, value) => {\r\n        setValue(value);\r\n        switch(value) {\r\n            case 0:\r\n                break;\r\n            case 1:\r\n                break;\r\n            case 2:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const postOnClick =() =>{}\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"main_header\">\r\n                <h1>Search</h1>\r\n            </div>\r\n            \r\n            <div className=\"embed_input\">\r\n                <SearchIcon className=\"embed_search\" />\r\n                {/* <SearchIcon className=\"embed_search\" value={searchWord} onChange={()=>search()}/> */}\r\n                <input placeholder=\"Search Jitter\" type=\"text\" \r\n                onChange={e=>setSearchWord(e.target.value)} \r\n                onKeyPress={e =>{if (e.key === 'Enter') {\r\n                    searchTag();\r\n                    search_tweet();\r\n                    search();\r\n                }}}/>\r\n            </div>\r\n            <div  className=\"user-profile-tabs\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                >\r\n                    <Tab label=\"Tweets\"  />\r\n                    <Tab label=\"Users\"  />\r\n                    <Tab label=\"Tags\"  />\r\n                   \r\n                </Tabs>\r\n            </div>\r\n            <TabPanel value={value} index={0}>\r\n                {tweets.map((tweet,index)=>{\r\n                return <Post key={index} tweet_data={tweet.post} user={tweet.user} postOnClick={postOnClick} viewOnly={false} currUser={props.currUser}/>\r\n            })}\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                {user.map((u,index)=>{\r\n                    return <Card user={u} key={index}></Card>\r\n                })}\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                {tagResult.map((tweet,index)=>{\r\n                    return <Post key={index} tweet_data={tweet.post} user={tweet.user} postOnClick={postOnClick} viewOnly={true} currUser={tweet.user}/>\r\n                })}\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n\r\n    function TabPanel(props) {\r\n        const {children, value, index} = props;\r\n    \r\n        return(\r\n            <div>\r\n                {\r\n                    value===index && (<h1>{children}</h1>)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/middle/Profile.js",["127"],"import React, {useEffect, useState} from 'react'\r\nimport ProfileTabs from \"./ProfileTabs\";\r\n\r\nimport BackIcon from '@material-ui/icons/ArrowBack';\r\nimport CalendarIcon from '@material-ui/icons/DateRange';\r\nimport BdayIcon from '@material-ui/icons/CakeOutlined';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport LanguageOutlinedIcon from '@material-ui/icons/LanguageOutlined';\r\n\r\nimport {Button} from \"@material-ui/core\";\r\nimport axios from 'axios';\r\n\r\nimport EditProfileDialogue from \"./EditProfileDialog\";\r\nimport CommentDialog from \"./CommentDialog\";\r\n\r\nfunction Profile() {\r\n    const [editProfileOpen, setEditProfileOpen] = React.useState(false);\r\n    const [user, setUser] = React.useState({id:0});\r\n    const [myTweets, setTweets] = useState([]);\r\n    const [tweetsAndReplies, setTandR] = useState([]);\r\n    const [tweetLike, setLikes] = useState([]);\r\n    const [following, setFollowing] = useState([]);\r\n    const [follower, setFollower] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        let bearer = 'Bearer ' + JSON.parse(JSON.stringify(localStorage.getItem('jwt')));\r\n        axios.get('/api/auth/get-profile', {\r\n            headers: {\r\n                Authorization: bearer\r\n            }\r\n        }).then((resp) => {\r\n            setUser(resp.data);\r\n            getMyTweets(resp.data.id);\r\n            getTweetsAndReplies(resp.data.id);\r\n            getLikes(resp.data.id);\r\n            getFollower(resp.data.id);\r\n            getFollowing(resp.data.id);\r\n            console.log(\"LOOK THIS IS USER_ID!!!!\", resp.data.id);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    },[]);\r\n\r\n\r\n    const getMyTweets = (user_id) => {\r\n        let bearer = 'Bearer ' + JSON.parse(JSON.stringify(localStorage.getItem('jwt')));\r\n        axios({\r\n            method: 'get',\r\n            url: '/api/auth/tweets/' + user_id,\r\n            headers: {\r\n                Authorization: bearer\r\n            }\r\n        }).then(resp => {\r\n            setTweets(resp.data);\r\n        }).catch(r => {\r\n            console.log(r);\r\n        });\r\n    }\r\n\r\n    const getTweetsAndReplies = (user_id) => {\r\n        let bearer = 'Bearer ' + JSON.parse(JSON.stringify(localStorage.getItem('jwt')));\r\n        axios({\r\n            method: 'get',\r\n            url: '/api/auth/tweetsAndReplies/' + user_id,\r\n            headers: {\r\n                Authorization: bearer\r\n            }\r\n        }).then(resp => {\r\n            setTandR(resp.data);\r\n        }).catch(r => {\r\n            console.log(r);\r\n        });\r\n    }\r\n\r\n    const getLikes = (user_id) => {\r\n        let bearer = 'Bearer ' + JSON.parse(JSON.stringify(localStorage.getItem('jwt')));\r\n        axios({\r\n            method: 'get',\r\n            url: '/api/auth/tweetslike/' + user_id,\r\n            headers: {\r\n                Authorization: bearer\r\n            }\r\n        }).then(resp => {\r\n            setLikes(resp.data);\r\n        }).catch(r => {\r\n            console.log(r);\r\n        });\r\n    }\r\n\r\n    const getFollowing = (user_id) => {\r\n        let bearer = 'Bearer ' + JSON.parse(JSON.stringify(localStorage.getItem('jwt')));\r\n        axios({\r\n            method: 'get',\r\n            url: '/api/auth/get-following/' + user_id,\r\n            headers: {\r\n                Authorization: bearer\r\n            }\r\n        }).then(resp => {\r\n            setFollowing(resp.data);\r\n        }).catch(r => {\r\n            console.log(r);\r\n        });\r\n    }\r\n\r\n    const getFollower = (user_id) => {\r\n        let bearer = 'Bearer ' + JSON.parse(JSON.stringify(localStorage.getItem('jwt')));\r\n        axios({\r\n            method: 'get',\r\n            url: '/api/auth/get-follower/' + user_id,\r\n            headers: {\r\n                Authorization: bearer\r\n            }\r\n        }).then(resp => {\r\n            setFollower(resp.data);\r\n        }).catch(r => {\r\n            console.log(r);\r\n        });\r\n    }\r\n\r\n    const handleClickOpen = () => {\r\n        setEditProfileOpen(true);\r\n    }\r\n\r\n    const onClose = (hasChanged) => {\r\n        setEditProfileOpen(false);\r\n        if(hasChanged) {\r\n            axios.get('/api/auth/get-profile', {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${localStorage.getItem(\"jwt\")}`},\r\n            }).then((resp) => {\r\n                setUser(resp.data);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const userAvatarURLCSS = user.avatar ? {backgroundImage: \"url('\" + user.avatar + \"')\"} : {background: \"grey\"};\r\n    const coverPhotoURLCSS = user.coverPhoto ? {backgroundImage: \"url('\" + user.coverPhoto + \"')\"} : {background: \"grey\"};\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"profile_header\">\r\n                <BackIcon className=\"backArrow\"/>\r\n                <span className=\"userName\">{user.username}</span>\r\n                <span className=\"numOfTweets\">{myTweets.length} Tweets</span>\r\n            </div>\r\n            <div className =\"profileSubheader\">\r\n                <div className=\"cover-photo\" style={coverPhotoURLCSS}/>\r\n                <div className=\"profile-image\" style={userAvatarURLCSS}/>\r\n                <Button className=\"edit_btn\" onClick={handleClickOpen}>Edit Profile</Button>\r\n            </div>\r\n            <div className=\"profileInfo\">\r\n                <div className =\"userName\">{user.username}</div>\r\n                <div className =\"jiterId\">@{user.username}</div>\r\n                <div className =\"bio\">{user.bio}</div>\r\n                <div className =\"profileInfoSection\">\r\n                    {user.location &&\r\n                        <span className=\"userProfileInfo\">\r\n                        <LocationOnOutlinedIcon/>\r\n                            {user.location}\r\n                        </span>\r\n                    }\r\n                    {user.website &&\r\n                        <span className=\"userProfileInfo\">\r\n                        <LanguageOutlinedIcon/>\r\n                        <a href = {\"https://\"+user.website}>{user.website}</a>\r\n                        </span>\r\n                    }\r\n                    <span className=\"userProfileInfo\">\r\n                        <BdayIcon/>\r\n                        Born {user.birthday}\r\n                    </span>\r\n                    <span className=\"userProfileInfo\">\r\n                        <CalendarIcon className=\"iconAlignment\"/>\r\n                        Joined {user.joinday}\r\n                    </span>\r\n                                    </div>\r\n                <div className =\"profileInfoSection\">\r\n                    <span className=\"userProfileInfo\">\r\n                        <span className=\"followingNum\">{following.length}</span>\r\n                        Following\r\n                    </span>\r\n                    <span className=\"userProfileInfo\">\r\n                        <span className=\"followerNum\">{follower.length}</span>\r\n                        Follower\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <ProfileTabs tweets={myTweets} tandR = {tweetsAndReplies} tweetLike={tweetLike} user = {user}/>\r\n            <EditProfileDialogue onClose={onClose} open={editProfileOpen} user={user} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/right/Embed.js",[],"/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/middle/Bookmark.js",[],"/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/left/SidebarOption.js",[],"/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/middle/CommentDialog.js",["128","129","130","131"],"import React, { useState } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport Tweet from '../middle/Tweet'\r\nimport Post from '../middle/Post'\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport axios from 'axios';\r\n// const handleClose=() =>{\r\n//     console.log(\"23\")\r\n// }\r\n\r\nfunction CommentDialog(props) {\r\n    const {onClose, open, main_post,main_post_user,comments, comment_user} = props\r\n    const handleClose = () => {\r\n        onClose(open);\r\n  };\r\n  const tweetOnChange=(func)=>{onClose(open);}\r\n  const postOnClick=()=>{}\r\n  return (\r\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth=\"xl\">\r\n      <DialogTitle id=\"form-dialog-title\">Add comment</DialogTitle>\r\n      <DialogContent>\r\n        <Post tweet_data={main_post} user={main_post_user} postOnClick={postOnClick} viewOnly={true} currUser={comment_user}/>\r\n        {comments.map((c,index)=>{\r\n            return <Post key={index} tweet_data={c.post} user={c.user} postOnClick={postOnClick} viewOnly={true}  currUser={comment_user}/>\r\n          })\r\n        }\r\n        <Tweet user={comment_user} tweetOnChange={tweetOnChange} reply={main_post.id}/>\r\n      </DialogContent>\r\n      \r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default CommentDialog","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/user/userCard.js",["132"],"import React, { useState, useEffect } from 'react'\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nconst Card = ({user}) => {\r\n  const [followText, setFollowText] = useState(\"Follow\")\r\n        const toggleFollow =(followText) =>{\r\n            if(followText ==='Follow'){\r\n                //do something\r\n                setFollowText(\"UnFollow\")\r\n            }else{\r\n                 //do something\r\n            }\r\n        }\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"post_avatar\">\r\n        <Avatar src={user.avatar} />\r\n      </div>\r\n      <div className=\"post_body\">\r\n        <div className=\"post_header\">\r\n          <div className=\"post_headerText\">\r\n            <h3>\r\n              {user.username}{\" \"}\r\n              <span className=\"post_headerSpecial\">\r\n                <VerifiedUserIcon className=\"post_badge\" />\r\n              </span>\r\n              <Button variant=\"outlined\" onClick={() => { toggleFollow() }} color=\"primary\">\r\n                    {followText}\r\n                </Button>\r\n            </h3>\r\n            <p>{user.bio}</p>\r\n          </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n\r\n","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/middle/ProfileTabs.js",["133","134","135","136","137","138"],"import React, {useEffect, useState} from 'react'\r\nimport { Tab, Tabs} from \"@material-ui/core\";\r\nimport Post from \"./Post\";\r\nimport Main from \"./Main\";\r\nimport axios from \"axios\";\r\nimport CommentDialog from \"./CommentDialog\";\r\nimport Tweet from \"./Tweet\";\r\n\r\nfunction ProfileTabs(props) {\r\n    const [value, setValue] = React.useState(0);\r\n    const [postData, setPostData] = useState({tweet_data:{id:0},comment:[],main_post_user:{id:0,avatar:\"\"}});\r\n    const [leaveComment, setLeaveComment] = useState(false);\r\n    const [viewComments, setViewComments] = useState(false);\r\n\r\n\r\n\r\n    const getComment = (viewPost) =>{\r\n        axios.get(`/api/auth/comments/${viewPost.tweet_data.id}`, {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${localStorage.getItem(\"jwt\")}`},\r\n        }).then((res)=>{\r\n            viewPost.comment=res.data\r\n            setPostData(viewPost)\r\n        }).catch(r=>{\r\n            console.log(r);\r\n            alert(r);\r\n        });\r\n    }\r\n\r\n    const postOnClick =(data, main_post_user) =>{\r\n        let viewPost={tweet_data: data, main_post_user:main_post_user,comment:[]}\r\n        getComment(viewPost)\r\n        setLeaveComment(!leaveComment)\r\n    }\r\n\r\n    const handleClose=()=>{\r\n        setLeaveComment(!leaveComment)\r\n    }\r\n\r\n    const handleChange = (event, value) => {\r\n        setValue(value);\r\n        switch(value) {\r\n            case 0:\r\n                break;\r\n            case 1:\r\n                break;\r\n            case 2:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"user-profile-tabs-container\">\r\n            <div  className=\"user-profile-tabs\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                >\r\n                    <Tab label=\"Tweets\"  />\r\n                    <Tab label=\"Comments & Shares\"  />\r\n                    <Tab label=\"Likes\" />\r\n                </Tabs>\r\n            </div>\r\n\r\n            <TabPanel value={value} index={0}>\r\n                {props.tweets.map((tweet,index)=>{\r\n                return <Post key={index} tweet_data={tweet} user={props.user} postOnClick={postOnClick} viewOnly={false} currUser={props.user}/>\r\n            })}\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                {props.tandR.map((tweet,index)=>{\r\n                    return <Post key={index} tweet_data={tweet.post} user={tweet.user} postOnClick={postOnClick} viewOnly={false} currUser={props.user}/>\r\n                })}\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                {props.tweetLike.map((tweet,index)=>{\r\n                    return <Post key={index} tweet_data={tweet.post} user={tweet.user} postOnClick={postOnClick} viewOnly={false} currUser={props.user}/>\r\n                })}\r\n            </TabPanel>\r\n\r\n            <CommentDialog\r\n                open={leaveComment}\r\n                main_post={postData.tweet_data}\r\n                main_post_user={postData.main_post_user}\r\n                comment_user={props.user}\r\n                comments={postData.comment}\r\n                onClose={handleClose} />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabPanel(props) {\r\n    const {children, value, index} = props;\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                value===index && (<h1>{children}</h1>)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileTabs","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/middle/EditProfileDialog.js",["139"],"import React,{ useEffect,useState } from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhotoOutlined\";\r\nimport InputWithCounter from \"./InputWithCounter\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nEditProfileDialogue.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    user: PropTypes.object.isRequired\r\n};\r\n\r\nfunction EditProfileDialogue(props) {\r\n    const {onClose, open} = props;\r\n    const [user, setUser ] = useState({...props.user});\r\n\r\n\r\n    useEffect(() => {\r\n        setUser(props.user);\r\n    }, [props.user])\r\n\r\n\r\n    function handleClose() {\r\n        onClose(true);\r\n    }\r\n\r\n    async function handleSaveProfile() {\r\n        let bday = new Date(user.birthday );//? user.birthday : user.birthday);\r\n        bday.setDate(bday.getDate() + 1);\r\n\r\n        let userDto = {\r\n                email: user.email,\r\n                username: user.username,\r\n                bio: user.bio,\r\n                birthday: bday,\r\n                location: user.location,\r\n                website: user.website,\r\n                avatar : user.avatar,\r\n                coverPhoto : user.coverPhoto\r\n        };\r\n\r\n\r\n\r\n        let bearer = 'Bearer ' + JSON.parse(JSON.stringify(localStorage.getItem('jwt')));\r\n        axios({\r\n            method: \"put\",\r\n            url: '/api/auth/update-user',\r\n            headers: {\r\n                Authorization: bearer\r\n              },\r\n            data: userDto\r\n        }).then((resp)=>{\r\n            handleClose();\r\n        }).catch(error => {\r\n            // TODO: error handling for UI\r\n            const alertMsg = JSON.stringify(error.response.data);\r\n            const msg = JSON.parse(alertMsg);\r\n            msg.message = new String(msg.message);\r\n            alert(msg.message);\r\n        });\r\n\r\n    }\r\n\r\n    function handleChangeCoverPhoto(event) {\r\n\r\n        const file = event.target.files[0];\r\n        let fd = new FormData();\r\n\r\n        fd.append('file', file);\r\n        axios.post('/api/avatars/photoUpload', fd)\r\n            .then(res=>{\r\n                const rawData = res.data.split(\"/\");\r\n                const fid = rawData[rawData.length-1]\r\n                    setUser({...user, coverPhoto:`http://45.76.207.32:8081/`+fid})\r\n                }\r\n            )\r\n    }\r\n\r\n    function handleChangeProfilePhoto(event) {\r\n        const file = event.target.files[0];\r\n        let fd = new FormData();\r\n        fd.append('file',file);\r\n        axios.post('/api/avatars/photoUpload', fd)\r\n            .then(res=>{\r\n                const rawData = res.data.split(\"/\");\r\n                const fid = rawData[rawData.length-1]\r\n                setUser({...user, avatar:`http://45.76.207.32:8081/`+fid})\r\n                }\r\n            )\r\n    }\r\n\r\n    const userAvatarURLCSS = user.avatar ? {backgroundImage: \"url('\" +user.avatar + \"')\"} : {background: \"grey\"};\r\n    const coverPhotoURLCSS = user.coverPhoto ? {backgroundImage: \"url('\" + user.coverPhoto + \"')\"} : {background: \"grey\"};\r\n\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} className=\"edit-profile-dialog\" aria-labelledby=\"edit-profile-dialog\" open={open}>\r\n            <DialogTitle id=\"edit-profile-dialog-header\">\r\n                <CloseIcon className=\"close-profile-dialog\" onClick={handleClose}/>\r\n                <span className=\"edit-profile-title\">Edit Profile</span>\r\n                <Button className=\"save-profile-button\" onClick={handleSaveProfile}>Save</Button>\r\n            </DialogTitle>\r\n            <DialogContent id=\"edit-profile-dialog-content\">\r\n                <div className=\"profileSubheader\">\r\n                    <div className=\"cover-photo\" style={coverPhotoURLCSS}>\r\n                        <input\r\n                            accept=\"image/*\"\r\n                            className=\"hidden-input\"\r\n                            id=\"cover-photo-button-file\"\r\n                            type=\"file\"\r\n                            onChange={handleChangeCoverPhoto}\r\n                        />\r\n                        <label className=\"edit-photo-button\" htmlFor=\"cover-photo-button-file\">\r\n                            <AddAPhotoIcon/>\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"profile-image\" style={userAvatarURLCSS}>\r\n                        <input\r\n                            accept=\"image/*\"\r\n                            className=\"hidden-input\"\r\n                            id=\"profile-photo-button-file\"\r\n                            type=\"file\"\r\n                            onChange={handleChangeProfilePhoto}/>\r\n                        <label className=\"edit-photo-button\" htmlFor=\"profile-photo-button-file\">\r\n                            <AddAPhotoIcon/>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div id=\"editUserForm\">\r\n                    <div className=\"input-form\">\r\n                        <label htmlFor=\"username\">Name</label>\r\n                        <InputWithCounter numChar=\"20\"\r\n                                          inputType=\"text\"\r\n                                          placeHolder=\"Add your name\"\r\n                                          maxChar=\"50\"\r\n                                          rows=\"1\"\r\n                                          value={user.username}\r\n                                          name=\"name\"\r\n                                          updateMethod={e=> setUser({...user, username: e.target.value}) }/>\r\n                    </div>\r\n                    <div className=\"input-form\">\r\n                        <label htmlFor=\"bio\">Bio</label>\r\n                        <InputWithCounter numChar=\"160\"\r\n                                          inputType=\"text\"\r\n                                          placeHolder=\"Add your bio\"\r\n                                          maxChar=\"160\"\r\n                                          multiline=\"true\"\r\n                                          rows=\"3\"\r\n                                          value={user.bio}\r\n                                          name=\"bio\"\r\n                                          updateMethod={e=> setUser({...user, bio: e.target.value}) }/>\r\n                    </div>\r\n                    <div className=\"input-form\">\r\n                        <label htmlFor=\"location\">Location</label>\r\n                        <InputWithCounter numChar=\"0\"\r\n                                          inputType=\"text\"\r\n                                          placeHolder=\"Add your location\"\r\n                                          maxChar=\"30\"\r\n                                          rows=\"1\"\r\n                                          value={user.location}\r\n                                          name=\"location\"\r\n                                          updateMethod={e=> setUser({...user, location: e.target.value}) }/>\r\n                    </div>\r\n                    <div className=\"input-form\">\r\n                        <label htmlFor=\"website\">Website</label>\r\n                        <InputWithCounter numChar=\"0\"\r\n                                          inputType=\"text\"\r\n                                          placeHolder=\"Add your website\"\r\n                                          maxChar=\"100\"\r\n                                          rows=\"1\"\r\n                                          value={user.website}\r\n                                          name=\"website\"\r\n                                          updateMethod={e=> setUser({...user, website: e.target.value}) }/>\r\n                    </div>\r\n                    <div className=\"input-form\">\r\n                        <label htmlFor=\"birthdate\">Birth Date</label>\r\n                        <Input name=\"birthdate\"\r\n                               type=\"date\"\r\n                               fullWidth\r\n                               defaultValue={user.birthday}\r\n                               onChange={e=> setUser({...user, birthday: e.target.value}) }/>\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default EditProfileDialogue","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/middle/Post.js",["140","141","142","143"],"import React, { useState, useEffect } from 'react'\r\nimport { Avatar, Tooltip } from \"@material-ui/core\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport BookmarkBorderOutlinedIcon from '@material-ui/icons/BookmarkBorderOutlined';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\nimport MoreHorizOutlinedIcon from '@material-ui/icons/MoreHorizOutlined';\r\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\r\nimport FlagOutlinedIcon from '@material-ui/icons/FlagOutlined';\r\nimport axios from 'axios';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ReportDialog from \"../admin/ReportDialog\";\r\nimport ReactHashtag from \"react-hashtag\";\r\nimport EditProfileDialogue from \"./EditProfileDialog\";\r\n\r\nconst Post = ({ tweet_data, user, postOnClick, viewOnly, currUser }) => {\r\n  const [like, setLike] = useState(false)\r\n  const [share, setShare] = useState(false)\r\n  const [tweetData, setTweetData] = useState(tweet_data)\r\n  const [bookMarked, setBookMarked] = useState(tweet_data.bookMarked)\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [reportDialogOpen,setReportDialogOpen] = React.useState(false);\r\n  // const [currentUser, setCurrentUser] = useState();\r\n\r\n  useEffect(() => {\r\n    init()\r\n  }, [tweetData]);\r\n  const viewPost = () => {\r\n    postOnClick(tweetData, user)\r\n  }\r\n\r\n  const deleteBookMark = () => {\r\n    let bearer = 'Bearer ' + JSON.parse(JSON.stringify(localStorage.getItem('jwt')))\r\n    axios({\r\n      method: 'delete',\r\n      url: `/api/bookmarks/${tweet_data.id}`,\r\n      headers: {\r\n        Authorization: bearer\r\n      },\r\n      data: {\r\n      }\r\n    }).then(() => {\r\n      setBookMarked(false)\r\n    }).catch(r => {\r\n      console.log(r)\r\n    });\r\n  }\r\n  const bookMark = () => {\r\n    let bearer = 'Bearer ' + JSON.parse(JSON.stringify(localStorage.getItem('jwt')))\r\n    axios({\r\n      method: 'post',\r\n      url: `/api/bookmarks/${tweet_data.id}`,\r\n      headers: {\r\n        Authorization: bearer\r\n      },\r\n      data: {\r\n      }\r\n    }).then(() => {\r\n      setBookMarked(true)\r\n    }).catch(r => {\r\n      console.log(r)\r\n    });\r\n  }\r\n\r\n\r\n  const toggleShare = (share) => {\r\n    let bearer = 'Bearer ' + JSON.parse(JSON.stringify(localStorage.getItem('jwt')))\r\n    axios.get(`/api/auth/toggleShare/${tweetData.id}/${!share}`, {\r\n      headers: {\r\n        Authorization: bearer\r\n      }\r\n    }).then((res) => {\r\n      setShare(!share)\r\n      setTweetData({ ...tweetData, shares: res.data })\r\n    }).catch(r => {\r\n      console.log(r);\r\n      alert(r);\r\n    });\r\n  }\r\n  const toggleLike = (like) => {\r\n    let bearer = 'Bearer ' + JSON.parse(JSON.stringify(localStorage.getItem('jwt')))\r\n    axios.get(`/api/auth/toggleLike/${tweetData.id}/${!like}`, {\r\n      headers: {\r\n        Authorization: bearer\r\n      }\r\n    }).then((res) => {\r\n      setLike(!like)\r\n      setTweetData({ ...tweetData, likes: res.data })\r\n    }).catch(r => {\r\n      console.log(r);\r\n      alert(r);\r\n    });\r\n  }\r\n  const init =() =>{\r\n    let bearer = 'Bearer ' + JSON.parse(JSON.stringify(localStorage.getItem('jwt')))\r\n    axios.get(`/api/auth/likeNShare/${tweetData.id}`,{\r\n      headers: {\r\n          Authorization: bearer\r\n      }\r\n    }).then((res)=>{\r\n          setLike(res.data.like)\r\n          setShare(res.data.share)\r\n      }).catch(r=>{\r\n          console.log(r);\r\n          alert(r);\r\n      });\r\n  }\r\n  //const showMenu=() =>{}\r\n  //const [like,setLike] =useState(tweet_data.likes);\r\n\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const deletePost = (e) =>{\r\n    let bearer = 'Bearer ' + JSON.parse(JSON.stringify(localStorage.getItem('jwt')));\r\n    axios({\r\n      method: 'delete',\r\n      url: '/api/auth/tweets/' + tweet_data.id,\r\n      headers: {\r\n        Authorization: bearer\r\n      }\r\n    }).then(resp => {\r\n      if(resp.data==true){\r\n\r\n      }\r\n    }).catch(r => {\r\n      console.log(r);\r\n    });\r\n  }\r\n  const reportPost = () => {\r\n    setReportDialogOpen(true);\r\n  }\r\n\r\n  const onReportClose = (hasChanged) => {\r\n    setReportDialogOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"preact-hashtagost\">\r\n      <div className=\"post_avatar\">\r\n        <Avatar src={user.avatar} />\r\n      </div>\r\n      <div className=\"post_body\">\r\n        <div className=\"post_header\">\r\n          <div className=\"post_headerText\">\r\n            <h3>\r\n              {user.username}{\" \"}\r\n              <span className=\"post_headerSpecial\">\r\n                <VerifiedUserIcon className=\"post_badge\" />\r\n              </span>\r\n              {(!viewOnly ) &&\r\n              <IconButton className=\"postOptions\"  aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                <MoreHorizOutlinedIcon/>\r\n              </IconButton>\r\n               }\r\n              <Menu\r\n                  id=\"simple-menu\"\r\n                  anchorEl={anchorEl}\r\n                  keepMounted\r\n                  open={Boolean(anchorEl)}\r\n                  onClose={handleClose}\r\n              >\r\n                {\r\n                  ( currUser.id === tweet_data.user_id)\r\n                  &&\r\n                  <MenuItem className=\"postMenu\" onClick={deletePost}>\r\n                    <DeleteForeverOutlinedIcon style={{\"marginRight\": \"5px\"}}/>\r\n                    Delete\r\n                  </MenuItem>\r\n                }\r\n                {\r\n                  (currUser.id != tweet_data.user_id)\r\n                  &&\r\n                    <MenuItem className=\"postMenu\" onClick={reportPost} >\r\n                      <FlagOutlinedIcon style={{\"marginRight\": \"5px\"}}/>\r\n                      Report\r\n                    </MenuItem>}\r\n              </Menu>\r\n            </h3>\r\n          </div>\r\n          <div className=\"post_headerDescription\">\r\n            <ReactHashtag onHashtagClick={val => alert(val)}>{tweetData.content}</ReactHashtag>\r\n            {tweetData.photo && <img className=\"tweet_photo\" src={tweetData.photo} alt=\"\"/>}\r\n          </div>\r\n        </div>\r\n        <div className={viewOnly ? \"hidden\" : \"post_footer\"}>\r\n          <button type='button' onClick={() => { viewPost(\"viewComment\") }} >\r\n            <ChatBubbleOutlineIcon fontSize=\"small\" />\r\n            <span>{tweetData.comments}</span>\r\n          </button>\r\n          <button type='button' onClick={() => toggleShare(share)} >\r\n            <RepeatIcon fontSize=\"small\" className={share ? \"share\" : \"\"} />\r\n            <span>{tweetData.shares}</span>\r\n          </button>\r\n          <button type='button' onClick={() => toggleLike(like)} >\r\n            <FavoriteBorderIcon fontSize=\"small\" className={like ? \"like\" : \"\"} />\r\n            <span>{tweetData.likes}</span>\r\n          </button>\r\n          {bookMarked ? <Tooltip title=\"Delete bookmark\"><BookmarkIcon  fontSize=\"small\" onClick={()=>deleteBookMark()} /></Tooltip>:\r\n              <Tooltip title=\"BookMark\"><BookmarkBorderOutlinedIcon onClick={()=>bookMark()} fontSize=\"small\" /></Tooltip>\r\n           }\r\n        </div>\r\n        <ReportDialog onReportClose={onReportClose} open={reportDialogOpen} tweet_id={tweet_data.id} user_id={currUser.id} />\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n\r\n","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/user/SignupDialog.js",["144","145"],"import React, { useState } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport axios from 'axios';\r\n// const handleClose=() =>{\r\n//     console.log(\"23\")\r\n// }\r\n\r\nfunction SignupModal(props) {\r\n  const { onClose, open } = props;\r\n  const [user, setUser] = useState({\r\n    name: null,\r\n    email: null,\r\n    birth: null,\r\n    avatar: null,\r\n    password: null,\r\n  });\r\n  const [signUpMethod, setSignUpMethod] = useState({ method: \"email\" });\r\n  const handleClose = () => {\r\n    onClose(open);\r\n  };\r\n  const submit = () => {\r\n    if (user.avatar === null) {\r\n      alert(\"Uploda avatar\");\r\n    } else {\r\n      axios.post('/api/auth/sign-up', {\r\n        email: user.email,\r\n        username: user.name,\r\n        birthday: user.birth,\r\n        password: user.password\r\n      }).then(res => {\r\n        //create an image\r\n        let createdUser = JSON.parse(JSON.stringify(res.data))\r\n        console.log(createdUser)\r\n        let fd = new FormData();\r\n        fd.append('file', user.avatar);\r\n        return axios.post('/api/avatars/upload/' + createdUser.id, fd)\r\n      }).then(resp => {\r\n        handleClose();\r\n        alert(\"User was created\");\r\n      }).catch(r => {\r\n        console.log(r)\r\n        alert(JSON.stringify(r.response.data));\r\n      });\r\n    }\r\n    /* axios.post('/sign-up', {\r\n      email: user.email,\r\n      username: user.name,\r\n      birthday: user.birth,\r\n      password: user.password\r\n    }).then(res => {\r\n      const body = JSON.parse(res.data);\r\n      const formData = new FormData();\r\n      formData.append(\"image\", imagefile.files[0]);\r\n      axios.post('uploadFile/'+body.id, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      }).then(res=>{\r\n        this.props.history.push(\"/login\");\r\n      })\r\n    }).catch(res=>{\r\n      alert(res.body);\r\n    })\r\n    onClose(open); */\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n      <DialogTitle id=\"form-dialog-title\">Create your account</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label=\"Name\"\r\n          type=\"text\"\r\n          fullWidth\r\n          onChange={(e) => setUser({\r\n            ...user,\r\n            name: e.target.value\r\n          }\r\n          )}\r\n        />\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          fullWidth\r\n          onChange={(e) => setUser({\r\n            ...user,\r\n            password: e.target.value\r\n          }\r\n          )}\r\n        />\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"email\"\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          fullWidth\r\n          onChange={(e) => setUser({\r\n            ...user,\r\n            email: e.target.value\r\n          }\r\n          )}\r\n        />\r\n        <label name=\"file\">Avatar</label>\r\n        <input className=\"fileInput\"\r\n          type=\"file\"\r\n          id=\"file\"\r\n          onChange={(e) => setUser({\r\n            ...user,\r\n            avatar: e.target.files[0]\r\n          })} />\r\n      </DialogContent>\r\n      <DialogContent>\r\n        <h4>Birth of date</h4>\r\n        <DialogContentText>\r\n          This will not be shown pubicly. Comfirm your own age, even if this account is for bussiness, a pet, or something else\r\n        </DialogContentText>\r\n        <TextField\r\n          id=\"date\"\r\n          label=\"Birthday\"\r\n          type=\"date\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange={(e) => setUser({\r\n            ...user,\r\n            birth: e.target.value\r\n          }\r\n          )}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n          </Button>\r\n        <Button onClick={submit} color=\"primary\">\r\n          Submit\r\n          </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default SignupModal","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/middle/Tweet.js",["146","147"],"import React, {useState} from 'react'\r\nimport { Avatar, Button } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport axios from 'axios';\r\n\r\nconst Tweet= ({user,tweetOnChange, reply}) => {\r\n    const [tweet, setTweet] = useState({\r\n        content:'',\r\n        photo:null,\r\n        reply_to_id:null\r\n    });\r\n    const upload =(photo) =>{\r\n        let fd = new FormData();\r\n        fd.append('file', photo);\r\n        axios.post('/api/avatars/photoUpload', fd)\r\n        .then(res=>{\r\n                setTweet({...tweet, photo:`http://45.76.207.32:8081/${res.data}`})\r\n            }\r\n        )\r\n    }\r\n    const post =()=>{\r\n        console.log(reply)\r\n        let bearer = 'Bearer ' + JSON.parse(JSON.stringify(localStorage.getItem('jwt')));\r\n        axios({\r\n            method: 'post',\r\n            url: '/api/auth/tweet',\r\n            headers: {\r\n              Authorization: bearer\r\n            },\r\n            data: {\r\n                content: tweet.content,\r\n                photo: tweet.photo,\r\n                reply_to_id: reply\r\n            }\r\n          }).then(resp => {\r\n            setTweet({...tweet,\r\n                content:'',\r\n                photo:null,\r\n                reply_to_id:null\r\n            })\r\n            tweetOnChange('tweet')\r\n          }).catch(r => {\r\n            console.log(r)\r\n            alert(JSON.stringify(r.response.data));\r\n          });\r\n\r\n    }\r\n    return (\r\n        <div className=\"tweet\">\r\n            <form >\r\n                <div className=\"tweetInput\">\r\n                    <Avatar alt=\"Remy Sharp\" src={user==undefined?'':user.avatar} />\r\n                    <div className=\"tweet_text\">\r\n                        <textarea id=\"tweet_box\" placeholder=\"What's happening?\" type=\"text\" value={tweet.content} onChange={e=> setTweet({\r\n                            ...tweet,\r\n                            content: e.target.value\r\n                        }\r\n                    )} />\r\n                    <img src={tweet.photo==null?'':tweet.photo} width=\"400px\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"tweet_btn_area\">\r\n                    <input className=\"tweet_btn_box tweet_btn\" id=\"file\" type=\"file\"\r\n                     onChange={(e) => upload( e.target.files[0])}/>\r\n                    <label htmlFor=\"file\" className={!reply?\"\" :\"hidden\"}>\r\n                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                        <PhotoCamera />\r\n                        </IconButton>\r\n                    </label>\r\n                    <Button className=\"tweet_btn_box tweet_btn\" onClick={post}>Tweet</Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tweet;\r\n","/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/middle/InputWithCounter.js",[],"/Users/AiNo/Documents/Douglas_college/CSIS-3275-001 - SOFTWARE ENGINEERING/Group project/Iteration01/CSIS3275001/frontend/src/components/admin/ReportDialog.js",["148","149","150"],"import React,{ useEffect,useState } from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport InputWithCounter from \"../middle/InputWithCounter\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nReportDialog.propTypes = {\r\n    onReportClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    tweet_id: PropTypes.number.isRequired,\r\n    user_id: PropTypes.number.isRequired\r\n};\r\n\r\nfunction ReportDialog(props) {\r\n    const {onReportClose, open,tweet_id,user_id} = props;\r\n    const [report_content ,setComment] = useState(\"\");\r\n\r\n    function handleClose(reportData) {\r\n        onReportClose(reportData);\r\n    }\r\n\r\n    async function handleReport() {\r\n\r\n        let reportDto = {\r\n            tweet_id: tweet_id,\r\n            user_id: user_id,\r\n            report_content: report_content\r\n        };\r\n\r\n\r\n        let bearer = 'Bearer ' + JSON.parse(JSON.stringify(localStorage.getItem('jwt')));\r\n        axios({\r\n            method: \"post\",\r\n            url: '/api/report',\r\n            headers: {\r\n                Authorization: bearer\r\n            },\r\n            data: reportDto\r\n        }).then((resp)=>{\r\n            handleClose(resp.data);\r\n            alert(\"Reported!\");\r\n        }).catch(error => {\r\n            // TODO: error handling for UI\r\n            const alertMsg = JSON.stringify(error.response.data);\r\n            const msg = JSON.parse(alertMsg);\r\n            msg.message = new String(msg.message);\r\n            alert(msg.message);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} className=\"edit-profile-dialog\" aria-labelledby=\"edit-profile-dialog\" open={open}>\r\n            <DialogTitle id=\"report-dialog-header\">\r\n                <CloseIcon className=\"close-dialog\" onClick={handleClose}/>\r\n                <span className=\"dialog-title\">Report an issue</span>\r\n\r\n            </DialogTitle>\r\n            <DialogContent id=\"report-dialog-content\">\r\n\r\n                <div id=\"reportCommentForm\">\r\n                    <div className=\"bottomMargin\">\r\n                        <h2>Help us understand the problem. What is going on with this Tweet?</h2>\r\n                    </div>\r\n                    <div className=\"input-form\">\r\n                        <label htmlFor=\"report_comment\">we appreciate your input</label>\r\n                        <InputWithCounter numChar=\"250\"\r\n                                          inputType=\"text\"\r\n                                          placeHolder=\"Please write the reason you want to report this tweet,\r\n                            Our support team will review your concern and take and action\"\r\n                                          maxChar=\"255\"\r\n                                          rows=\"5\"\r\n                                          name=\"report_comment\"\r\n                                          updateMethod={e=> setComment( e.target.value)}\r\n                                        />\r\n                    </div>\r\n                    <div className=\"bottomMargin\">\r\n                        <Button className=\"report-button\" onClick={handleReport}>Report</Button>\r\n                    </div>\r\n\r\n                </div>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default ReportDialog",{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":17,"column":12,"nodeType":"157","messageId":"158","endLine":17,"endColumn":14},{"ruleId":"159","severity":1,"message":"160","line":37,"column":7,"nodeType":"161","endLine":37,"endColumn":9,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":7,"column":8,"nodeType":"165","messageId":"166","endLine":7,"endColumn":23},{"ruleId":"163","severity":1,"message":"167","line":9,"column":8,"nodeType":"165","messageId":"166","endLine":9,"endColumn":19},{"ruleId":"163","severity":1,"message":"168","line":10,"column":26,"nodeType":"165","messageId":"166","endLine":10,"endColumn":41},{"ruleId":"169","severity":1,"message":"170","line":15,"column":18,"nodeType":"171","messageId":"158","endLine":15,"endColumn":20},{"ruleId":"159","severity":1,"message":"172","line":33,"column":7,"nodeType":"161","endLine":33,"endColumn":17,"suggestions":"173"},{"ruleId":"163","severity":1,"message":"174","line":3,"column":10,"nodeType":"165","messageId":"166","endLine":3,"endColumn":18},{"ruleId":"169","severity":1,"message":"170","line":36,"column":43,"nodeType":"171","messageId":"158","endLine":36,"endColumn":45},{"ruleId":"163","severity":1,"message":"175","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":12},{"ruleId":"176","severity":1,"message":"177","line":30,"column":18,"nodeType":"178","endLine":30,"endColumn":29},{"ruleId":"176","severity":1,"message":"177","line":32,"column":7,"nodeType":"178","endLine":32,"endColumn":18},{"ruleId":"163","severity":1,"message":"179","line":1,"column":16,"nodeType":"165","messageId":"166","endLine":1,"endColumn":25},{"ruleId":"163","severity":1,"message":"180","line":16,"column":11,"nodeType":"165","messageId":"166","endLine":16,"endColumn":35},{"ruleId":"181","severity":1,"message":"182","line":66,"column":9,"nodeType":"183","messageId":"184","endLine":73,"endColumn":10},{"ruleId":"163","severity":1,"message":"185","line":14,"column":8,"nodeType":"165","messageId":"166","endLine":14,"endColumn":21},{"ruleId":"163","severity":1,"message":"186","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":25},{"ruleId":"163","severity":1,"message":"187","line":5,"column":8,"nodeType":"165","messageId":"166","endLine":5,"endColumn":17},{"ruleId":"163","severity":1,"message":"188","line":11,"column":8,"nodeType":"165","messageId":"166","endLine":11,"endColumn":25},{"ruleId":"163","severity":1,"message":"189","line":12,"column":8,"nodeType":"165","messageId":"166","endLine":12,"endColumn":13},{"ruleId":"163","severity":1,"message":"179","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"179","line":1,"column":16,"nodeType":"165","messageId":"166","endLine":1,"endColumn":25},{"ruleId":"163","severity":1,"message":"190","line":4,"column":8,"nodeType":"165","messageId":"166","endLine":4,"endColumn":12},{"ruleId":"163","severity":1,"message":"191","line":7,"column":8,"nodeType":"165","messageId":"166","endLine":7,"endColumn":13},{"ruleId":"163","severity":1,"message":"192","line":13,"column":12,"nodeType":"165","messageId":"166","endLine":13,"endColumn":24},{"ruleId":"163","severity":1,"message":"168","line":13,"column":26,"nodeType":"165","messageId":"166","endLine":13,"endColumn":41},{"ruleId":"181","severity":1,"message":"182","line":42,"column":9,"nodeType":"183","messageId":"184","endLine":49,"endColumn":10},{"ruleId":"193","severity":1,"message":"194","line":67,"column":27,"nodeType":"195","messageId":"196","endLine":67,"endColumn":50},{"ruleId":"163","severity":1,"message":"197","line":18,"column":8,"nodeType":"165","messageId":"166","endLine":18,"endColumn":27},{"ruleId":"159","severity":1,"message":"198","line":31,"column":6,"nodeType":"161","endLine":31,"endColumn":17,"suggestions":"199"},{"ruleId":"169","severity":1,"message":"170","line":133,"column":19,"nodeType":"171","messageId":"158","endLine":133,"endColumn":21},{"ruleId":"169","severity":1,"message":"200","line":182,"column":32,"nodeType":"171","messageId":"158","endLine":182,"endColumn":34},{"ruleId":"163","severity":1,"message":"201","line":23,"column":10,"nodeType":"165","messageId":"166","endLine":23,"endColumn":22},{"ruleId":"163","severity":1,"message":"202","line":23,"column":24,"nodeType":"165","messageId":"166","endLine":23,"endColumn":39},{"ruleId":"169","severity":1,"message":"170","line":53,"column":55,"nodeType":"171","messageId":"158","endLine":53,"endColumn":57},{"ruleId":"203","severity":1,"message":"204","line":60,"column":21,"nodeType":"178","endLine":60,"endColumn":80},{"ruleId":"163","severity":1,"message":"179","line":1,"column":16,"nodeType":"165","messageId":"166","endLine":1,"endColumn":25},{"ruleId":"163","severity":1,"message":"205","line":9,"column":8,"nodeType":"165","messageId":"166","endLine":9,"endColumn":13},{"ruleId":"193","severity":1,"message":"194","line":54,"column":27,"nodeType":"195","messageId":"196","endLine":54,"endColumn":50},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["208"],"no-unused-vars","'MailOutlineIcon' is defined but never used.","Identifier","unusedVar","'ListAltIcon' is defined but never used.","'setViewComments' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook useEffect has a missing dependency: 'getTweets'. Either include it or remove the dependency array.",["209"],"'Redirect' is defined but never used.","'Post' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'handleSearchInputChanges' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'CommentDialog' is defined but never used.","'useState' is defined but never used.","'TextField' is defined but never used.","'DialogContentText' is defined but never used.","'axios' is defined but never used.","'Main' is defined but never used.","'Tweet' is defined but never used.","'viewComments' is assigned a value but never used.","no-new-wrappers","Do not use String as a constructor.","NewExpression","noConstructor","'EditProfileDialogue' is defined but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["210"],"Expected '!==' and instead saw '!='.","'signUpMethod' is assigned a value but never used.","'setSignUpMethod' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},"Update the dependencies array to be: [dispatch]",{"range":"217","text":"218"},"Update the dependencies array to be: [getTweets, postData]",{"range":"219","text":"220"},"Update the dependencies array to be: [init, tweetData]",{"range":"221","text":"222"},[1274,1276],"[dispatch]",[1130,1140],"[getTweets, postData]",[1583,1594],"[init, tweetData]"]